{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-6b5c3e0af419ff3d.js","src/index.ts","src/classes/main.ts","src/classes/timer.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/classes/parameters.ts","src/classes/controller.ts","src/classes/vector2d.ts","src/classes/geneticAlgorithm.ts","src/classes/mineSweeper.ts","src/classes/neuralNet.ts","src/classes/neuronLayer.ts","src/classes/neuron.ts","src/classes/twoDimensionalMatrix.ts","src/utils/clamp.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import Main from \"./classes/main\";\nconst app = Main.getInstance(); ","import Timer from \"./timer\";\nimport Controller from \"./controller\";\nimport Parameters from \"./parameters\";\n\nclass cppMessageSystem {\n    private static instance: cppMessageSystem;\n    private constructor() { }\n    public static getInstance(): cppMessageSystem {\n        if (!cppMessageSystem.instance) {\n            cppMessageSystem.instance = new cppMessageSystem();\n        }\n        return cppMessageSystem.instance;\n    }\n    private static messageQueue: string[] = [];\n    public static pushMessage(message: string): void {\n        cppMessageSystem.messageQueue.push(message);\n    }\n    public static popMessage(): string {\n        if(cppMessageSystem.messageQueue.length>0) return cppMessageSystem.messageQueue.pop() || \"\";\n        return \"\";\n    }\n    public static peekMessage(): string {\n        if(cppMessageSystem.messageQueue.length>0) return cppMessageSystem.messageQueue[cppMessageSystem.messageQueue.length-1];\n        return \"\";\n    }\n    \n}\n// window.requestAnimationFrame(step);\n\nexport class Main {\n    private controller: Controller;\n    private done: boolean = false;\n    private paused: boolean = false;\n    \n    \n    private static instance: Main;\n    timer: any;\n    static getInstance(): Main {\n        if (!Main.instance) {\n            Main.instance = new Main();\n        }\n        return Main.instance;\n    }\n    \n    // emulate C++'s message system because it's definitely differnt from JS so why not\n    public static messageProcesser(): void {\n        switch (cppMessageSystem.popMessage()) {\n            case \"pause\":\n                Main.getInstance().pause();\n                break;\n            case \"start\":\n                Main.getInstance().controller = new Controller(Main.getInstance().pause, Main.getInstance().unPause);   \n                break;\n            case \"paint\":\n                Main.getInstance().controller.render();\n                // confirm(\"paint\");\n                // throw new Error(\"paint\");\n                break;\n            case \"quit\":\n                Main.getInstance().done = true;\n                break;\n            default:\n                break;\n        }\n    }\n\n    pause(): void {\n        this.paused = true; \n        confirm(\"pause\");\n        // cppMessageSystem.pushMessage(\"pause\");\n        // throw new Error(\"Method not implemented.\");\n    }\n    unPause(): void {\n\n        this.paused = false;\n        this.loop();\n    }\n\n    private loop = () => {\n        while(cppMessageSystem.peekMessage() !== \"\"){ \n            Main.messageProcesser();\n        }\n        if(this.controller.getFastRender() || this.timer.readyForNextFrame()){\n            if(!this.controller.update()){\n                console.error('Error in controller update');\n                this.done = true;\n            }\n            cppMessageSystem.pushMessage(\"paint\");\n        }\n        if(this.done) cppMessageSystem.pushMessage(\"quit\");\n        if(!this.paused) setTimeout(this.loop, 0);\n    }\n\n    constructor(){\n        this.paused = false;\n        this.done = false;\n        this.timer = new Timer(Parameters.framesPerSecond);\n        this.controller= new Controller(this.pause, this.unPause);\n        setTimeout(this.loop, 0);    \n    }\n}\n\nexport default Main;","import Parameters from \"./parameters\";\n\nclass Timer {\n    private currentTime: number;\n    private lastTime: number;\n    private nextTime: number;\n    private frameTime: number;\n    private perfCountFreq: number;\n    private timeElapsed: number;\n    private fps: number;\n    constructor(fps: number = Parameters.framesPerSecond){\n        this.currentTime = 0;\n        this.lastTime = 0;\n        this.nextTime = 0;\n        this.frameTime = 0;\n        // this strategy is mostly a byproduct of being a port from C++\n        this.perfCountFreq = 1000; //ms in a second \n        this.timeElapsed = 0;\n        this.fps = 0;\n        if(fps){\n            this.fps = fps;\n            this.frameTime = this.perfCountFreq / this.fps;\n            this.lastTime = new Date().getTime();\n            this.currentTime = this.lastTime;\n            this.nextTime = this.currentTime + this.frameTime;\n\n        }\n    }\n\n    public start(){\n        this.nextTime = new Date().getTime() + this.frameTime;\n    };\n\n    public readyForNextFrame(): boolean {\n        this.currentTime = new Date().getTime();\n        if(this.currentTime > this.nextTime){\n            this.timeElapsed = this.currentTime - this.lastTime;\n            this.lastTime = this.currentTime;\n            this.nextTime = this.currentTime + this.frameTime;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public getTimeElapsed(): number {\n        this.currentTime = new Date().getTime();\n        this.timeElapsed = this.currentTime - this.lastTime;\n        this.lastTime = this.currentTime;\n        return this.timeElapsed;\n    }\n\n}\n\nexport default Timer;","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","class Parameters {\n    /* General parameters */\n    static windowWidth = 400;\n    static windowHeight = 400;\n    static framesPerSecond = 120;\n\n    /* Used for the neural network */\n    static numInputs = 4;\n    static numHidden = 1;  \n    static neuronsPerHiddenLayer = 6;\n    static numOutputs = 2;\n    /* for tweeking the sigmoid function */\n    static activationResponse = 1;\n    /* Bias value */\n    static bias = -1;\n    /* limits how fast the sweepers can turn */\n    static maxTurnRate = 0.3;\n    static maxSpeed = 2;\n    /* for controlling the size */\n    static sweeperScale = 5;\n    /* controller parameters */\n    static numMines = 40;\n    static numSweepers = 30;\n    /* number of time steps we allow for each generation to live */\n    static numTicks = 2000;\n    /* scaling factor for mines */\n    static mineScale = 2;\n    /* Genetic Algorithim parameters */\n    static crossoverRate = 0.7;\n    static mutationRate = 0.05; // 0.1\n    /* the maximum amount the ga may mutate each weight by */\n    static maxPerturbation = 0.3;\n    /* used for elitism */\n    static numElite = 4;\n    static numCopiesElite = 1\n}\n\nexport default Parameters;","import Vector2d from \"./vector2d\";\nimport GeneticAlgorithm, { Genome } from \"./geneticAlgorithm\";\nimport Minesweeper from \"./mineSweeper\";\nimport TwoDimensionalMatrix from \"./twoDimensionalMatrix\";\nimport Parameters from \"./parameters\";\n\n\nconst numberSweeperVertices = 16;\nconst sweeperVertices: Vector2d[] = new Array(numberSweeperVertices);\nsweeperVertices[0] = new Vector2d(-1, -1);\nsweeperVertices[1] = new Vector2d(-1, 1);\nsweeperVertices[2] = new Vector2d(-0.5, 1);\nsweeperVertices[3] = new Vector2d(-0.5, -1);\nsweeperVertices[4] = new Vector2d(0.5, -1);\nsweeperVertices[5] = new Vector2d(1, -1);\nsweeperVertices[6] = new Vector2d(1, 1);\nsweeperVertices[7] = new Vector2d(0.5, 1);\nsweeperVertices[8] = new Vector2d(-0.5, -0.5);\nsweeperVertices[9] = new Vector2d(0.5,-0.5);\nsweeperVertices[10] = new Vector2d(-0.5, 0.5);\nsweeperVertices[11] = new Vector2d(-.25,0.5);   \nsweeperVertices[12] = new Vector2d(-0.25, 1.75);\nsweeperVertices[13] = new Vector2d(0.25, 1.75);\nsweeperVertices[14] = new Vector2d(0.25, 0.5);\nsweeperVertices[15] = new Vector2d(0.5, 0.5);\n\nconst numberMineVertices = 4;\nconst mine: Vector2d[] = new Array(numberMineVertices); \nmine[0] = new Vector2d(-1, -1);\nmine[1] = new Vector2d(-1, 1);\nmine[2] = new Vector2d(1, 1);\nmine[3] = new Vector2d(1, -1);\n\nclass Controller {\n    // storage for the population of genomes\n    vecThePopulation: Genome[];\n    // array of sweepers\n    vecSweepers: Minesweeper[];\n    // array of mines\n    vecMines: Vector2d[] = [];\n    // size of population\n    numberOfSweepers: number;\n    // amount of mines in the world\n    numberOfMines: number;\n    // amount of weights in neural net\n    numberOfWeightsInNN: number;\n\n    // pointer to the GA class\n    private geneticAlgorithm: GeneticAlgorithm;\n\n    // vertex buffer for the sweeper shape's vertices\n    private sweeperVB: Vector2d[] = [];\n    // vertex buffer for the mine shape's vertices\n    private mineVB: Vector2d[] = [];\n\n    private fastRender: boolean = false;\n\n    private iTick: number = 0;\n\n    private iGeneration: number = 0;\n\n    // stores the average fitness per generation for use in graphing.\n    private vecAvFitness: number[] = [];\n    // stores the best fitness per generation\n    private vecBestFitness: number[] = [];\n    private vecMedianFitness: number[] = [];\n    private pauseSwitch: HTMLInputElement;\n    private canvas: HTMLCanvasElement;\n\n    private pause: Function;\n    private unPause: Function;\n    constructor(pause:Function, unPause:Function){\n        const fastRenderLabel = document.createElement(\"label\");\n        fastRenderLabel.innerText = \"Fast Render\";\n        const fastRenderSwitch = document.createElement(\"input\");\n        fastRenderSwitch.type = \"checkbox\";\n        fastRenderSwitch.checked = false;\n        fastRenderSwitch.addEventListener(\"change\", (e) => {\n            // @ts-ignore\n            if(e.target.checked) {\n                this.fastRender = true;\n            } else {\n                this.fastRender = false;\n            }\n        });\n        fastRenderLabel.appendChild(fastRenderSwitch);\n        const label = document.createElement(\"label\");\n        label.innerText = \"Pause\";\n        const pauseSwitch = document.createElement(\"input\");\n        pauseSwitch.type = \"checkbox\";\n        pauseSwitch.checked = false;\n        pauseSwitch.addEventListener(\"change\", (e) => {\n            // @ts-ignore\n            if(e.target.checked) {\n                this.pause();\n            } else {\n                this.unPause();\n            }\n        });\n        label.appendChild(pauseSwitch);\n        this.pauseSwitch = pauseSwitch;\n        this.pause = pause;\n        this.unPause = unPause;\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = Parameters.windowWidth;\n        canvas.height = Parameters.windowHeight;\n        setTimeout(() => {\n            document.body.appendChild(canvas);\n            document.body.appendChild(label);\n            document.body.appendChild(fastRenderLabel);\n        },0);\n        this.canvas = canvas;\n        this.numberOfSweepers = Parameters.numSweepers;\n        this.numberOfMines =  Parameters.numMines;\n        this.vecThePopulation = [];\n        this.vecSweepers = new Array(this.numberOfSweepers).fill('').map(() => new Minesweeper());\n        this.vecMines = new Array(this.numberOfMines).fill('').map(() => new Vector2d(Math.random() * canvas.width, Math.random() * canvas.height));\n\n        // get the total number of weights used in the sweepers\n        // neural network so we can initialise the GA\n        this.numberOfWeightsInNN = this.vecSweepers[0].getNumberOfWeights();\n\n        // initialise the Genetic Algorithm class\n        this.geneticAlgorithm = new GeneticAlgorithm(\n            this.numberOfSweepers,\n            Parameters.mutationRate,\n            Parameters.crossoverRate,\n            this.numberOfWeightsInNN);\n\n        // Get the weights from the GA and insert into the sweepers brains\n        this.vecThePopulation = this.geneticAlgorithm.getChromos();\n        this.vecSweepers.forEach((_, i) => {\n            this.vecSweepers[i].putWeights(this.vecThePopulation[i].vecWeights);\n        });\n        \n       \n        // fill the vertex buffers\n        this.sweeperVB = sweeperVertices.map((v) => new Vector2d(v.x, v.y));\n        this.mineVB = mine.map((v) => new Vector2d(v.x, v.y));\n\n    }\n\n    render():void{\n        const generationText = `Generation: ${this.iGeneration}`;\n        const ctx = this.canvas.getContext(\"2d\");\n        if(!ctx) {\n            console.log(\"no context\");\n            return;\n        }\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.fillStyle = \"white\";\n        ctx.strokeRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.fill();\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 0.5;\n        ctx.font = \"13px arial\";\n        ctx.closePath();\n        ctx.strokeText(generationText, 5, 15);\n        if(!this.fastRender){\n            this.vecMines.forEach((_, i) => {\n                ctx.beginPath();\n                ctx.strokeStyle = \"green\";\n                ctx.lineWidth = 1;\n                const mineVB = this.mineVB.map((v) => new Vector2d(v.x, v.y));\n                this.worldTransform(mineVB, this.vecMines[i]);\n                ctx.moveTo(mineVB[0].x, mineVB[0].y);\n                for (let vert=1; vert<mineVB.length; vert++) {\n                    ctx.lineTo(mineVB[vert].x, mineVB[vert].y);\n                }\n                ctx.lineTo(mineVB[0].x, mineVB[0].y);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            this.vecSweepers.forEach((_, i) => {\n                ctx.beginPath();\n                ctx.strokeStyle = \"red\";\n                ctx.lineWidth = 1;\n                if(i>=Parameters.numElite){\n                    ctx.strokeStyle = \"black\";\n                }\n                const sweeperVB = this.sweeperVB.map((v) => new Vector2d(v.x, v.y));\n                this.vecSweepers[i].worldTransform(sweeperVB);\n                ctx.moveTo(sweeperVB[0].x, sweeperVB[0].y);\n                for (let vert=1; vert<sweeperVB.length; vert++) {\n                    ctx.lineTo(sweeperVB[vert].x, sweeperVB[vert].y);\n                }\n                ctx.lineTo(sweeperVB[0].x, sweeperVB[0].y);\n                ctx.stroke();\n                ctx.closePath();\n                // confirm(\"that is one SWEEPER\")\n            });\n            // throw new Error(\"that is one frame\");\n        } else {\n            this.plotStats(ctx);\n        }\n        // confirm(\"that is one frame\");\n    }\n\n    worldTransform(vBuffer:Vector2d[], vPos: Vector2d):void{\n        // create a transformation matrix\n        const matTransform = new TwoDimensionalMatrix();\n        // scale\n        matTransform.scale(Parameters.mineScale, Parameters.mineScale);\n        // and translate\n        matTransform.translate(vPos.x, vPos.y);\n        // now transform the ships vertices\n        matTransform.transformPoints(vBuffer);\n\n    }\n\n    //-------------------------------------Update-----------------------------\n    //\n    //\tThis is the main workhorse. The entire simulation is controlled from here.\n\n    update = ():boolean => {\n        // throw new Error(\"Update Method not implemented.\");\n        //run the sweepers through CParams::iNumTicks amount of cycles. During\n        //this loop each sweepers NN is constantly updated with the appropriate\n        //information from its surroundings. The output from the NN is obtained\n        //and the sweeper is moved. If it encounters a mine its fitness is\n        //updated appropriately,\n        if(this.iTick++ < Parameters.numTicks) {\n            this.vecSweepers.forEach((_, i) => {\n                if(!this.vecSweepers[i].update(this.vecMines)){\n                    console.log(\"error in update, wrong amount of NN inputs\");\n                    return false;\n                }\n                const grabHit = this.vecSweepers[i].checkForMine(this.vecMines, Parameters.mineScale);\n                if (grabHit >= 0) {\n                    // we have discovered a mine so increase fitness\n                    this.vecSweepers[i].incrementFitness();\n                    // mine found so replace the mine with another at a random \n                    // position\n                    this.vecMines[grabHit] = new Vector2d(Math.random() * this.canvas.width, Math.random() * this.canvas.height);\n                    \n                }\n                this.vecThePopulation[i].dFitness = this.vecSweepers[i].fitness();\n            });\n        }\n        // another generation is completed\n\n        // run the GA and update sweepers with their new NNs\n        else {\n            // update the stats to be used in our stat window\n            this.vecAvFitness.push(this.geneticAlgorithm.averageFitness());\n            this.vecBestFitness.push(this.geneticAlgorithm.bestFitness());\n            this.vecMedianFitness.push(this.geneticAlgorithm.getMedianFitness());\n            this.iGeneration++;\n            // reset cycles\n            this.iTick = 0;\n            // run the GA to create a new population\n            this.geneticAlgorithm.epoch(this.vecThePopulation);\n\n            // what are the names of these genomes passed back to us?\n            console.log(`Generation ${this.iGeneration} Genome Names:\\n\\t${this.vecThePopulation.map((g) => g.getName()).join(\"\\n\\t\")}`)\n\n            // insert the new (hopefully)improved brains back into the sweepers\n            // and reset their positions etc\n            this.vecSweepers.forEach((_, i) => {\n                this.vecSweepers[i].putWeights([...this.vecThePopulation[i].vecWeights]);\n                this.vecSweepers[i].reset();\n            });\n        }\n        return true;\n    }\n\n    plotStats(ctx: CanvasRenderingContext2D | null):void{\n        if(!ctx) return;\n        const newAv = this.geneticAlgorithm.averageFitness();\n        const newBest = this.geneticAlgorithm.bestFitness();\n        const newMedian = this.geneticAlgorithm.getMedianFitness();\n        const s = `Best Fitness: ${newBest}`;\n        const s2 = `Average Fitness: ${newAv}`;\n        const s3 = `Median Fitness: ${newMedian}`;\n        ctx.font = \"10px arial\";\n        ctx.strokeText(s, 5, 30);\n        ctx.strokeText(s2, 5, 45);\n        ctx.strokeText(s3, 5, 60);\n\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, Parameters.windowHeight);\n        ctx.lineTo(Parameters.windowWidth, Parameters.windowHeight);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.strokeStyle = \"red\";\n        ctx.beginPath();\n        ctx.moveTo(0, Parameters.windowHeight);\n        for(let i=0; i<=this.vecAvFitness.length; i++){\n            ctx.lineTo(i * (Parameters.windowWidth/(this.vecAvFitness.length +2)), Parameters.windowHeight - (this.vecAvFitness[i] * Parameters.windowHeight/20));\n        }\n        ctx.lineTo(this.vecAvFitness.length * (Parameters.windowWidth/(this.vecAvFitness.length + 2)), Parameters.windowHeight - (newAv * Parameters.windowHeight/20));\n        ctx.stroke();\n        ctx.closePath();\n        ctx.strokeStyle = \"blue\";\n        ctx.beginPath();\n        ctx.moveTo(0, Parameters.windowHeight);\n        for(let i=0; i<this.vecBestFitness.length; i++){\n            ctx.lineTo(i * (Parameters.windowWidth/(this.vecBestFitness.length+2)), Parameters.windowHeight - (this.vecBestFitness[i] * Parameters.windowHeight/20));\n        }\n        ctx.lineTo(this.vecBestFitness.length * (Parameters.windowWidth/(this.vecBestFitness.length + 2)), Parameters.windowHeight - (newBest * Parameters.windowHeight/20));\n\n        ctx.stroke();\n        ctx.closePath();\n        ctx.strokeStyle = \"green\";\n        ctx.beginPath();\n        ctx.moveTo(0, Parameters.windowHeight);\n        for(let i=0; i<this.vecMedianFitness.length; i++){\n            ctx.lineTo(i * (Parameters.windowWidth/(this.vecMedianFitness.length+2)), Parameters.windowHeight - (this.vecMedianFitness[i] * Parameters.windowHeight/20));\n        }\n        ctx.lineTo(this.vecMedianFitness.length * (Parameters.windowWidth/(this.vecMedianFitness.length + 2)), Parameters.windowHeight - (newMedian * Parameters.windowHeight/20));\n\n        ctx.stroke();\n        ctx.closePath();\n\n    }\n    // accessor methods\n    getFastRender(){return this.fastRender}\n    setFastRender(value:boolean){this.fastRender = value}\n    fastRenderToggler(){this.fastRender = !this.fastRender} \n};\nexport default Controller;\n","class Vector2d {\n  public x: number;\n  public y: number;\n  constructor(a:number,b:number){\n    this.x = a;\n    this.y = b;\n  }\n  add(vector:Vector2d){\n    this.x += vector.x;\n    this.y += vector.y;\n    return this;\n  }\n  subtract(vector:Vector2d){\n    this.x -= vector.x;\n    this.y -= vector.y;\n    return this;\n  }\n  multiply(multiplier:number){\n    this.x *= multiplier;\n    this.y *= multiplier;\n    return this;\n  }\n  divide(divisor:number){\n    this.x /= divisor;\n    this.y /= divisor;\n    return this;\n  }\n  // also called length of a 2d vector, \n  // hypotenuse of a right triangle\n  magnitude(){\n    return Math.sqrt(this.x*this.x + this.y*this.y);\n  }\n  normalize(){\n    return this.divide(this.magnitude());\n  }\n  static dot(vector1:Vector2d,vector2:Vector2d){\n    return vector1.x*vector2.x + vector1.y*vector2.y;\n  }\n  static sign(vector1:Vector2d,vector2:Vector2d){\n    if(vector1.y*vector2.x > vector1.x*vector2.y){\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n};\n\nexport default Vector2d;\n","import Parameters from \"./parameters\";\nlet genomeCoutner = 0;\n\nexport class Genome {\n  vecWeights: number[] = [];\n  dFitness: number = 0;\n  private name:string;\n  static sort(a:Genome,b:Genome){\n    return a.dFitness - b.dFitness;\n  }\n  getName():string{\n    return this.name;\n  }\n  setName(name:string){\n    this.name = name;\n  }\n  constructor(w:number[] = [], dFitness:number = 0, name:string = \"\") {\n    this.name = name?name:`Genome_${genomeCoutner++}`;\n    if(w.length < 1){\n      this.dFitness = 0;\n    } else if (w.length > 0){\n      this.vecWeights = [...w];\n      this.dFitness = dFitness;\n    }\n  }\n}\n\n\nclass GeneticAlgorithm {\n  private iPopSize: number;\n  private dMutationRate: number;\n  private dCrossoverRate: number;\n  private iChromoLength: number;\n  private dTotalFitness: number;\n  private cGeneration: number;\n  private iFittestGenome: number;\n  private dBestFitness: number;\n  private dWorstFitness: number;\n  private dAverageFitness: number;\n  private vecPop: Genome[] = [];\n  private medianFitness: number;\n  \n  constructor(popsize: number, MutRat: number, CrossRat: number, numweights: number){\n    this.iPopSize = popsize;\n    this.dMutationRate = MutRat;\n    this.dCrossoverRate = CrossRat;\n    this.iChromoLength = numweights;\n    this.medianFitness = 0;\n    this.dTotalFitness = 0;\n    this.cGeneration = 0;\n    this.iFittestGenome = 0;\n    this.dBestFitness = 0;\n    this.dWorstFitness = 99999999;\n    this.dAverageFitness = 0;\n    //initialise population with chromosomes consisting of random\n\t  //weights while all fitnesses are zero\n    for (let i=0; i<this.iPopSize; i++) {\n      this.vecPop.push(new Genome([],0));\n      for (let j=0; j<this.iChromoLength; j++){\n        this.vecPop[i].vecWeights.push(Math.random());\n      }\n    }\n  }\n\n  //---------------------------------mutate--------------------------------\n  //\n  //\tmutates a chromosome by perturbing its weights by an amount not \n  //\tgreater than dMaxPerturbation\n  //  this mutates the chromo in place\n  //-----------------------------------------------------------------------\n  mutate(chromo: number[]):number[] {\n    // traverse the chromosome and mutate each weight dependent\n    // on the mutation rate\n    const newChromo = [];\n    for (let i=0; i<chromo.length; i++) {\n      // do we perturb this weight?\n      if (Math.random() < this.dMutationRate){\n        // add or subtract a small value to the weight\n        // Math.random() - Math.random() returns a value between -1 and 1\n        newChromo[i] = chromo[i] + ((Math.random() - Math.random()) * Parameters.maxPerturbation);\n      } else {\n        // no mutation\n        newChromo[i] = chromo[i];\n      }\n    }\n    return newChromo;\n  }\n\n\n  //----------------------------------getChromoRoulette()------------------\n  //\n  //\treturns a chromo based on roulette wheel sampling\n  //\n  //-----------------------------------------------------------------------\n  getChromoRoulette():Genome {\n    //generate a random number between 0 & total fitness count\n    \n    const slice = Math.random() * this.dTotalFitness;\n    //this will be set to the chosen chromosome\n    let theChosenOne;\n    \n    //go through the chromosomes adding up the fitness so far\n    let fitnessSoFar = 0;\n    for (let i=0; i<this.vecPop.length; i++){\n      fitnessSoFar += this.vecPop[i].dFitness;\n      //if the fitness so far > random number return the chromo at \n      //this point\n      if (fitnessSoFar >= slice){\n        theChosenOne = this.vecPop[i];\n        break;\n      }\n    }\n    if(typeof theChosenOne === \"undefined\") throw new Error('not a genome!');\n    return new Genome([...theChosenOne.vecWeights], theChosenOne.dFitness, theChosenOne.getName());\n  }\n\n  //-------------------------------------crossover()-----------------------\n  //\t\n  //  given parents and storage for the offspring this method performs\n  //\tcrossover according to the GAs crossover rate\n  //-----------------------------------------------------------------------\n  crossover(mum:number[], dad:number[], baby1:number[], baby2:number[]){\n    //just return parents as offspring dependent on the rate\n    //or if parents are the same\n    if ( (Math.random() > this.dCrossoverRate) || (mum.join('') === dad.join(''))) {\n      mum.forEach(x => baby1.push(x));\n      dad.forEach(x => baby2.push(x));\n      return;\n    }\n\n    //determine a crossover point\n    const cp = Math.round(Math.random() * (mum.length - 1));\n    //create the offspring\n    for (let i=0; i<cp; i++){\n      baby1.push(mum[i]);\n      baby2.push(dad[i]);\n    }\n\n    for (let i=cp; i<mum.length; i++){\n      baby1.push(dad[i]);\n      baby2.push(mum[i]);\n    }\n    return;\n  }\n\n\n\n  //-----------------------------------epoch()-----------------------------\n  //\n  //\ttakes a population of chromosones and runs the algorithm through one\n  //\t cycle.\n  //\tReturns a new population of chromosones.\n  //\n  //-----------------------------------------------------------------------\n  epoch(oldPop:Genome[]):void{\n    //assign the given population to the classes population\n    console.log(`this.vecPop: ${JSON.stringify(this.vecPop.map((g)=>g.getName()))}`);\n    console.log(`oldPop: ${JSON.stringify(oldPop.map((g)=>g.getName()))}`);\n    this.vecPop = oldPop;\n\n    //reset the appropriate variables\n    this.reset();\n\n    //sort the population (for scaling and elitism)\n    this.vecPop.sort(Genome.sort);\n\n    //calculate best, worst, average and total fitness\n    this.calculateBestWorstAvTot();\n    \n    //create a temporary vector to store new chromosones\n    const vecNewPop:Genome[] = [];\n\n    //Now to add a little elitism we shall add in some copies of the\n    //fittest genomes. Make sure we add an EVEN number or the roulette\n    //wheel sampling will crash\n    if (!(Parameters.numCopiesElite * Parameters.numElite % 2)){\n      this.grabNBest(Parameters.numElite, Parameters.numCopiesElite, vecNewPop);\n    } else {\n      console.log('error: numCopiesElite * numElite is not even');\n    }\n    \n    //now we enter the GA loop\n    //repeat until a new population is generated\n    while (vecNewPop.length < this.iPopSize){\n      //grab two chromosones\n      const mum = this.getChromoRoulette();\n      const dad = this.getChromoRoulette();\n\n      //create some offspring via crossover\n      const baby1:number[] = [];\n      const baby2:number[] = [];\n\n\n      this.crossover(mum.vecWeights, dad.vecWeights, baby1, baby2);\n      //now we mutate\n      const mutieBaby1 = this.mutate(baby1);\n      const mutieBaby2 = this.mutate(baby2);\n      // console.log(`mutieBaby1: ${JSON.stringify(mutieBaby1)}`)\n      //now copy into vecNewPop population\n      vecNewPop.push(new Genome([...mutieBaby1], 0));\n      vecNewPop.push(new Genome([...mutieBaby2], 0));\n    }\n\n    //finished so assign new pop back into m_vecPop\n    this.vecPop = vecNewPop;\n    oldPop.length = 0;\n    oldPop.push(...this.vecPop);\n  }\n\n  \n  //-------------------------grabNBest----------------------------------\n  //\n  //\tThis works like an advanced form of elitism by inserting NumCopies\n  //  copies of the NBest most fittest genomes into a population vector\n  //--------------------------------------------------------------------\n\n  grabNBest(nBest:number, numCopies:number,pop:Genome[]){\n    let nB = nBest;\n    //add the required amount of copies of the n most fittest \n    //to the supplied vector\n    while(nB--){\n      for (let i=0; i<numCopies; i++){\n        pop.push(\n          new Genome([\n            ...this.vecPop[(this.vecPop.length - 1) - nB].vecWeights],  \n            0, \n            this.vecPop[(this.vecPop.length - 1) - nB].getName())\n        );\n      }\n    }\n  }\n  \n  //-----------------------calculateBestWorstAvTot-----------------------\t\n  //\n  //\tcalculates the fittest and weakest genome and the average/total \n  //\tfitness scores\n  //---------------------------------------------------------------------\n  calculateBestWorstAvTot(){\n    this.dTotalFitness = 0;\n    let highestSoFar = 0;\n    let lowestSoFar  = 9999999;\n    this.vecPop.sort(Genome.sort);\n    this.medianFitness = this.vecPop[Math.floor(this.vecPop.length/2)].dFitness;\n    for (let i=0; i<this.vecPop.length; i++){\n      //update fittest if necessary\n      if (this.vecPop[i].dFitness > highestSoFar){\n        highestSoFar = this.vecPop[i].dFitness;\n        this.iFittestGenome = i;\n        this.dBestFitness\t = highestSoFar;\n      }\n      //update worst if necessary\n      if (this.vecPop[i].dFitness < lowestSoFar){\n        lowestSoFar = this.vecPop[i].dFitness;\n        this.dWorstFitness = lowestSoFar;\n      }\n      this.dTotalFitness\t+= this.vecPop[i].dFitness;\n    }//next chromo\n    this.dAverageFitness = this.dTotalFitness / this.iPopSize;\n  }\n\n  //-------------------------reset()------------------------------\n  //\n  //\tresets all the relevant variables ready for a new generation\n  //--------------------------------------------------------------\n  reset() {\n    this.dTotalFitness = 0;\n    this.dBestFitness = 0;\n    this.dWorstFitness = 9999999;\n    this.dAverageFitness = 0;\n    this.medianFitness = 0;\n  }\n\n  //accessor methods\n  getChromos() {return this.vecPop;}\n  getGeneration() {return this.cGeneration;}\n  averageFitness() {return this.dTotalFitness / this.iPopSize;}\n  bestFitness() {return this.dBestFitness;}\n  getMedianFitness() {return this.medianFitness;}\n}\n\nexport default GeneticAlgorithm;\n","import NeuralNet from \"./neuralNet\";\nimport Vector2d from \"./vector2d\";\nimport Parameters from \"./parameters\";\nimport TwoDimensionalMatrix from \"./twoDimensionalMatrix\";\nimport clamp from \"../utils/clamp\";\nclass Minesweeper {\n    /* minesweeper's neural net */\n    private brain: NeuralNet;\n    /* position of sweeper on screen */\n    private position: Vector2d;\n    /* vector Mine Sweeper is to aim for, ie \"look at here\" */\n    private lookAt: Vector2d;\n    /* sweeper's rotation */\n    private rotation: number;\n    /* velocity of sweeper */\n    private velocity: number;\n    /* mines discovered */\n    private minesFound: number;\n    /* size of sweeper's drawing */\n    private scale: number;\n    /* index of closest mine */\n    private closestMine: number;\n    /* left track */\n    private leftTrack: number;\n    /* right track */\n    private rightTrack: number;\n\n    public getNumberOfWeights = (): number => {\n        return this.brain.getNumberOfWeights();\n    }\n\n    constructor() {\n        this.brain = new NeuralNet();\n        this.position = new Vector2d(Math.random() * Parameters.windowWidth, Math.random() * Parameters.windowHeight);\n        this.rotation = Math.random() * 2 * Math.PI;\n        this.lookAt = new Vector2d(Math.sin(this.rotation) * -1,Math.cos(this.rotation));\n        this.velocity = 0;\n        this.minesFound = 0;\n        this.scale = Parameters.sweeperScale;\n        this.closestMine = 0;\n        this.leftTrack = 0.16;\n        this.rightTrack = 0.16;\n    }\n\n    /*****\n     * reset\n     * Resets the sweepers position, fitness and rotation\n     * \n    */ \n    public reset = ():void => {\n        this.position = new Vector2d(Math.random() * Parameters.windowWidth, Math.random() * Parameters.windowHeight);\n        this.rotation = Math.random() * 2 * Math.PI;\n        this.minesFound = 0;\n    }\n\n    /**\n     * worldTransform\n     * \n     * sets up a translation matrix for the sweeper according to its\n     *  scale, rotation and position. Returns the transformed vertices.\n     * \n     */\n    public worldTransform = (sweeper:Vector2d[]):void => {\n        const matTransform = new TwoDimensionalMatrix();\n        matTransform.scale(this.scale, this.scale);\n        matTransform.rotate(this.rotation % (2 * Math.PI));\n        matTransform.translate(this.position.x, this.position.y);\n        matTransform.transformPoints(sweeper);\n    }\n\n    /**\n     * update() \n     * First we take sensor readings and feed these into the sweepers brain.\n    * The inputs are:\n    * A vector to the closest mine (x, y)\n    * The sweepers 'look at' vector (x, y)\n    * We receive two outputs from the brain: leftTrack & rightTrack.\n    * Given a force for each track we calculate the resultant rotation \n    * and acceleration and apply to current velocity vector.\n    * */\n    public update = (mines: Vector2d[]): Boolean => {\n        const inputs: number[] = [];\n        const closestMine = this.getClosestMine(mines);\n        const closestMineV: Vector2d = new Vector2d(closestMine.x, closestMine.y);\n        closestMineV.normalize();\n        inputs.push(closestMineV.x);\n        inputs.push(closestMineV.y);\n        inputs.push(this.lookAt.x);\n        inputs.push(this.lookAt.y);\n        this.closestMine = mines.map((e) => `${e.x},${e.y}`).findIndex((e) => e ===`${closestMine.x},${closestMine.y}`);\n        const outputs: number[] = this.brain.update(inputs);\n        if (outputs.length !== Parameters.numOutputs) {\n            throw new Error(`Outputs length does not match number of outputs ${outputs.length}, ${Parameters.numOutputs}`);\n        }\n\n        this.leftTrack = outputs[0];\n        this.rightTrack = outputs[1];\n\n        let rotForce = this.leftTrack - this.rightTrack;\n        rotForce = clamp(rotForce, -Parameters.maxTurnRate, Parameters.maxTurnRate);\n        this.rotation += rotForce;\n        this.velocity = this.leftTrack + this.rightTrack;\n        this.lookAt.x = -1 * Math.sin(this.rotation);\n        this.lookAt.y = Math.cos(this.rotation);\n        this.position.add(this.lookAt.multiply(this.velocity));\n        if (this.position.x < 0) {\n            this.position.x = (this.position.x % Parameters.windowWidth) + Parameters.windowWidth;\n        }\n        if (this.position.x > Parameters.windowWidth) {\n            this.position.x = (this.position.x % Parameters.windowWidth)\n        }\n        if (this.position.y < 0) {\n            this.position.y = (this.position.y % Parameters.windowHeight) + Parameters.windowHeight;\n        }\n        if (this.position.y > Parameters.windowHeight) {\n            this.position.y = (this.position.y % Parameters.windowHeight)\n        }\n        return true;\n    }\n\n    public getClosestMine = (mines: Vector2d[]): Vector2d => {\n        let closestMine = 0;\n        let closestDistance = Number.MAX_VALUE;\n        let distance = 0;\n        for (let i = 0; i < mines.length; i++) {\n            const temp = new Vector2d(this.position.x, this.position.y);\n            distance = temp.subtract(mines[i]).magnitude();\n            if (distance < closestDistance) {\n                closestDistance = distance;\n                closestMine = i;\n            }\n        }\n        return mines[closestMine];\n    }\n\n    public incrementMinesFound = (): void => {\n        this.minesFound++;\n    }\n\n    public getMinesFound = (): number => {\n        return this.minesFound;\n    }\n\n    public getPosition = (): Vector2d => {\n        return new Vector2d(this.position.x, this.position.y);\n    }\n    public checkForMine = (mines: Vector2d[], size:number): number => {\n        const temp = this.getPosition();\n        const distance = temp.subtract(mines[this.closestMine]).magnitude();\n        if (distance < (size + 5)) {\n            return this.closestMine;\n        }\n        return -1;\n    }\n\n\n    // accessors\n    incrementFitness = (): void => { this.incrementMinesFound(); }\n\n\tfitness = () => {return this.minesFound;}\n  \n    putWeights = (w:number[]) => {this.brain.putWeights([...w]);}\n\n}\n\nexport default Minesweeper;","import NeuronLayer from \"./neuronLayer\";\nimport Parameters from \"./parameters\";\n// import { dActivationResponse, dBias, iNeuronsPerHiddenLayer, iNumHidden, iNumInputs, iNumOutputs } from \"./parameters\";\n\nclass NeuralNet {\n  private numInputs: number;\n  private numOutputs: number;\n  private numHiddenLayers: number;\n  private neuronsPerHiddenLayer: number;\n  private neuronLayers: NeuronLayer[] = [];\n\n  constructor(){\n    this.numInputs = Parameters.numInputs;\n    this.numOutputs = Parameters.numOutputs;\n    this.numHiddenLayers = Parameters.numHidden;\n    this.neuronsPerHiddenLayer = Parameters.neuronsPerHiddenLayer;\n    this.createNet();\n  }\n\n\n  createNet(){\n    //create the layers of the network\n    if (this.numHiddenLayers > 0){\n      //create first hidden layer\n      this.neuronLayers.push(new NeuronLayer(this.neuronsPerHiddenLayer, this.numInputs));\n      for (let i=0; i<this.numHiddenLayers-1; i++){\n        this.neuronLayers.push(new NeuronLayer(this.neuronsPerHiddenLayer, this.neuronsPerHiddenLayer));\n      }\n      //create output layer\n      this.neuronLayers.push(new NeuronLayer(this.numOutputs, this.numInputs));\n    } else {\n      //create output layer\n      this.neuronLayers.push(new NeuronLayer(this.numOutputs, this.numInputs));\n    }\n  }\n\n  //\treturns the total number of weights needed for the net\n  getNumberOfWeights():number{\n    let weights = 0;\n    //for each layer\n    for (let i=0; i<this.numHiddenLayers; i++){\n      //for each neuron\n      // if(this.neuronLayers.length > 0){\n        for (let j=0; j<this.neuronLayers[i].numNeurons; j++){\n          //for each weight\n          for (let k=0; k<this.neuronLayers[i].vecNeurons[j].numInputs; k++){\n            weights++;\n          }\n        }\n      // }\n    }\n    return weights;\n  }\n\n  //\treturns an array containing the weights\n  getWeights(){\n    //this will hold the weights\n\t  const weights:number[] = [];\n    //for each layer\n    for (let i=0; i<this.numHiddenLayers; i++){\n      //for each neuron\n      for (let j=0; j<this.neuronLayers[i].numNeurons; j++){\n        //for each weight\n        for (let k=0; k<this.neuronLayers[i].vecNeurons[j].numInputs; k++){\n          weights.push(this.neuronLayers[i].vecNeurons[j].vecWeight[k]);\n        }\n      }\n    }\n    return weights;\n  }\n  putWeights(weights:number[]){\n    let cWeight = 0;\t\n    //for each layer\n    for (let i=0; i<this.numHiddenLayers; i++){\n      //for each neuron\n      if(this.neuronLayers.length > 0){\n        for (let j=0; j<this.neuronLayers[i].numNeurons; j++){\n          //for each weight\n          for (let k=0; k<this.neuronLayers[i].vecNeurons[j].numInputs; k++){\n            this.neuronLayers[i].vecNeurons[j].vecWeight[k] = weights[cWeight++];\n          }\n        }\n      }\n    }\n    return;\n  }\n  update(inputArgs:number[]):number[]{\n    let inputs = [...inputArgs];\n    // stores the resultant outputs from each layer\n    let outputs:number[] = [];\n    let cWeight = 0;\n    // first check that we have the correct amount of inputs\n    if (inputs.length !== this.numInputs){\n      // just return an empty vector if incorrect.\n      console.log(`Error wrong number of inputs, expected ${this.numInputs} got ${inputs.length}`);\n      return outputs;\n    }\n    // For each layer.... (+1 for bias layer)\n    for (let i=0; i<this.numHiddenLayers + 1; i++){\n      if ( i > 0 ){\n        inputs = [...outputs];\n      }\n      outputs.length = 0;\n      cWeight = 0;\n      // for each neuron sum the (inputs * corresponding weights).\n      // Throw the total at our sigmoid function to get the output.\n      if(this.neuronLayers.length > 0){\n        for (let j=0; j<this.neuronLayers[i].numNeurons; j++){\n          let netinput = 0;\n          this.numInputs = this.neuronLayers[i].vecNeurons[j].numInputs;\n          for (let k=0; k<this.numInputs-1; k++){\n            // sum the weights x inputs\n            netinput += this.neuronLayers[i].vecNeurons[j].vecWeight[k] * inputs[cWeight++];\n          }\n          // add in the bias\n          netinput += this.neuronLayers[i].vecNeurons[j].vecWeight[this.numInputs-1] * Parameters.bias;\n          // we can store the outputs from each layer as we generate them.\n          // The combined activation is first filtered through the sigmoid\n          // function\n          outputs.push(this.sigmoid(netinput, Parameters.activationResponse));\n          cWeight = 0;\n        }\n      }\n    }\n    return outputs;\n  }\n  sigmoid(netinput: number, response:number):number {\n    return ( 1 / ( 1 + Math.exp(-1 * netinput / response)));\n  }\n}\n\n export default NeuralNet;\n","import Neuron from './neuron';\n\nclass NeuronLayer {\n  //the number of neurons in this layer\n  numNeurons: number;\n  numInputsPerNeuron: number;\n  //the layer of neurons\n  vecNeurons: Neuron[] = [];\n\n  constructor(numNeurons:number, numInputsPerNeuron: number){\n    this.numNeurons = numNeurons;\n    this.numInputsPerNeuron = numInputsPerNeuron;\n    for(let i = 0; i<numNeurons; i++){\n      this.vecNeurons.push(new Neuron(this.numInputsPerNeuron));\n    }\n  }\n};\n\nexport default NeuronLayer;","class Neuron {\n  numInputs:number;\n  vecWeight:number[] = [];\n\n\n  constructor(numInputs:number) {\n    //we need an additional weight for the bias hence the +1\n    this.numInputs = numInputs;\n    for (let i=0; i<numInputs+1; ++i){\n      this.vecWeight.push(Math.random());\n    }\n  }\n\n}\n\nexport default Neuron;\n\n","import Vector2d from \"./vector2d\";\n\n\nclass TwoDimensionalMatrix {\n    _11: number;\n    _12: number;\n    _13: number;\n    _21: number;\n    _22: number;\n    _23: number;\n    _31: number;\n    _32: number;\n    _33: number;\n\n    constructor() {\n        this._11 = 1;\n        this._12 = 0;\n        this._13 = 0;\n        this._21 = 0;\n        this._22 = 1;\n        this._23 = 0;\n        this._31 = 0;\n        this._32 = 0;\n        this._33 = 1;\n    }\n\n    private consumeMatrix(mIn: TwoDimensionalMatrix): void {\n        this._11 = mIn._11;\n        this._12 = mIn._12;\n        this._13 = mIn._13;\n        this._21 = mIn._21;\n        this._22 = mIn._22;\n        this._23 = mIn._23;\n        this._31 = mIn._31;\n        this._32 = mIn._32;\n        this._33 = mIn._33;\n    }\n\n    public TwoDimensionalMatrixMultiply(mIn: TwoDimensionalMatrix): void {\n        const mat_temp = new TwoDimensionalMatrix();\n        mat_temp._11 = (this._11 * mIn._11) + (this._12 * mIn._21) + (this._13 * mIn._31);\n        mat_temp._12 = (this._11 * mIn._12) + (this._12 * mIn._22) + (this._13 * mIn._32);\n        mat_temp._13 = (this._11 * mIn._13) + (this._12 * mIn._23) + (this._13 * mIn._33);\n        mat_temp._21 = (this._21 * mIn._11) + (this._22 * mIn._21) + (this._23 * mIn._31);\n        mat_temp._22 = (this._21 * mIn._12) + (this._22 * mIn._22) + (this._23 * mIn._32);\n        mat_temp._23 = (this._21 * mIn._13) + (this._22 * mIn._23) + (this._23 * mIn._33);\n        mat_temp._31 = (this._31 * mIn._11) + (this._32 * mIn._21) + (this._33 * mIn._31);\n        mat_temp._32 = (this._31 * mIn._12) + (this._32 * mIn._22) + (this._33 * mIn._32);\n        mat_temp._33 = (this._31 * mIn._13) + (this._32 * mIn._23) + (this._33 * mIn._33);\n        this.consumeMatrix(mat_temp);\n    }\n\n    public createIdentity(): TwoDimensionalMatrix {\n        const matrix = new TwoDimensionalMatrix();\n        matrix._11 = 1;\n        matrix._22 = 1;\n        matrix._33 = 1;\n        matrix._12 = 0;\n        matrix._13 = 0;\n        matrix._21 = 0;\n        matrix._23 = 0;\n        matrix._31 = 0;\n        matrix._32 = 0;\n        return matrix;\n    }\n    public translate(x: number, y: number): void {\n        const matrix = this.createIdentity();\n        matrix._31 = x;\n        matrix._32 = y;\n        this.TwoDimensionalMatrixMultiply(matrix);\n    }\n\n    public scale(xScale: number, yScale: number): void {\n        const matrix = this.createIdentity();\n        matrix._11 = xScale;\n        matrix._22 = yScale;\n        this.TwoDimensionalMatrixMultiply(matrix);\n\n    }\n\n    public rotate(angle: number): void {\n        const matrix = this.createIdentity();\n        const sin = Math.sin(angle);\n        const cos = Math.cos(angle);\n        matrix._11 = cos;\n        matrix._12 = sin;\n        matrix._21 = -1 * sin;\n        matrix._22 = cos;\n        this.TwoDimensionalMatrixMultiply(matrix);\n    }\n\n    public transformPoints(points: Vector2d[]): void {\n        for (let i = 0; i < points.length; i++) {\n            const tempX = (this._11 * points[i].x) + (this._21 * points[i].y) + (this._31);\n            const tempY = (this._12 * points[i].x) + (this._22 * points[i].y) + (this._32);\n            points[i].x = tempX;\n            points[i].y = tempY;\n        }\n    }\n\n    public reportMatrix(): string {\n        return (`\n        ${this._11} ${this._12} ${this._13}\n        ${this._21} ${this._22} ${this._23}\n        ${this._31} ${this._32} ${this._33}`);\n    }\n};\n\nexport default TwoDimensionalMatrix;","\n//-------------------------------------Clamp()-----------------------------------------\n//\n//\tclamps the first argument between the second two\n//\n//-------------------------------------------------------------------------------------\nconst clamp = (num: number, min: number, max: number) => Math.min(Math.max(num, min), max);\n\nexport default clamp;"],"names":[],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}